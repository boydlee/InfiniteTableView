// Generated by CoffeeScript 1.4.0
(function() {
  var InfiniteTableView;

  InfiniteTableView = function(properties) {
    var CONSTANTS, LoadingTableViewRow, attachLoadingWidget, firstVisibleItem, onTableFinishedScrolling, onTableScrolling, rows, self, totalItemCount, visibleItemCount;
    CONSTANTS = {
      osname: Titanium.Platform.osname,
      isAndroid: Titanium.Platform.osname === "android"
    };
    LoadingTableViewRow = require("LoadingTableViewRow");
    self = Titanium.UI.createTableView(properties);
    rows = [];
    self.isFetchingData = true;
    totalItemCount = 0;
    firstVisibleItem = 0;
    visibleItemCount = 0;
    self.updateData = function(data) {
      rows.pop();
      rows = rows.concat(data);
      self.data = rows;
      return self.isFetchingData = false;
    };
    attachLoadingWidget = function() {
      self.isFetchingData = true;
      rows.push(new LoadingTableViewRow());
      self.data = rows;
      return self.scrollToIndex(rows.length - 1);
    };
    onTableScrolling = function(evt) {
      if (CONSTANTS.isAndroid) {
        totalItemCount = evt.totalItemCount;
        firstVisibleItem = evt.firstVisibleItem;
        return visibleItemCount = evt.visibleItemCount;
      }
    };
    onTableFinishedScrolling = function(evt) {
      if ((CONSTANTS.isAndroid && (totalItemCount < firstVisibleItem + visibleItemCount + 1) && !self.isFetchingData) || (CONSTANTS.osname === "iphone" && (evt.contentOffset.y + evt.size.height + 100) > evt.contentSize.height && !self.isFetchingData)) {
        attachLoadingWidget();
        return self.fireEvent("tableViewAtBottom", {
          isAtBottom: true
        });
      }
    };
    self.addEventListener("scroll", onTableScrolling);
    self.addEventListener("scrollEnd", onTableFinishedScrolling);
    return self;
  };

  module.exports = InfiniteTableView;

}).call(this);
